{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["defaultCardItems","key","setCardStatus","indexes","cardIndex","styles","StackedCarousel","autoRotate","rotationInterval","cardItems","children","useState","previousIndex","currentIndex","nextIndex","handleCardTransition","useCallback","setIndexes","prevState","handleLeftButton","useEffect","onCardChange","transitionInterval","setInterval","clearInterval","className","leftButton","onClick","style","containerClassName","card","cardClassName","index","rightButton","App","event","console","log","src","marginRight","marginLeft","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11e779e6.chunk.js","sourcesContent":["\nimport React, { useEffect, useCallback, useState } from 'react';\nimport styles from './styles.module.css'\n\nconst defaultCardItems = [\n  (\n    <div key=\"key1\">\n      <h2>First Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  ),\n  (\n    <div key=\"key2\">\n      <h2>Second Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  ),\n  (\n    <div key=\"key3\">\n      <h2>Third Item</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n];\n\n\nconst setCardStatus = (indexes, cardIndex) => {\n  // console.log(indexes, cardIndex);\n  if (indexes.currentIndex === cardIndex) {\n    return  styles.active;\n  } else if (indexes.nextIndex === cardIndex) {\n    return styles.next;\n  } else if (indexes.previousIndex === cardIndex) {\n    return styles.prev;\n  }\n  return styles.inactive;\n}\n\nexport const StackedCarousel = ({ style, onCardChange, containerClassName, cardClassName, leftButton, rightButton, autoRotate=true, rotationInterval=2000, children}) => {\n  const cardItems = children || defaultCardItems;\n  const [indexes, setIndexes] = useState({\n    previousIndex: cardItems.length-1,\n    currentIndex: 0,\n    nextIndex: 1\n  });\n\n  const handleCardTransition = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    if (indexes.currentIndex >= cardItems.length - 1) {\n      setIndexes({\n        previousIndex: cardItems.length - 1,\n        currentIndex: 0,\n        nextIndex: 1\n      });\n    } else {\n      setIndexes(prevState => ({\n        previousIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex + 1 ,\n        nextIndex:\n          prevState.currentIndex + 2 === cardItems.length\n            ? 0\n            : prevState.currentIndex + 2\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  const handleLeftButton = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    if (indexes.currentIndex <= 0) {\n      setIndexes({\n        previousIndex: cardItems.length - 2,\n        currentIndex: cardItems.length - 1,\n        nextIndex: 0\n      });\n\n    } else {\n      setIndexes(prevState => ({\n        nextIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex - 1,\n        previousIndex:\n          prevState.currentIndex - 1 <= 0\n            ? cardItems.length - 1\n            : prevState.currentIndex - 2\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  \n  useEffect(() => {\n    onCardChange && onCardChange(indexes);\n    const transitionInterval = setInterval(() => {\n      autoRotate && handleCardTransition();\n    }, rotationInterval);\n    return () => clearInterval(transitionInterval);\n  }, [handleCardTransition, indexes, autoRotate]);\n\n  return (\n    <div className={`${styles.container}`}>\n      {\n        leftButton ?\n          <span onClick={handleLeftButton}>{leftButton}</span>\n          : <span className={styles.leftButton} onClick={handleLeftButton}>&lsaquo;</span>\n      }\n      <ul style={{...style}} className={`${styles.cardCarousel} ${containerClassName? containerClassName : styles.carouselDefault}`}>\n        {cardItems.map((card, index) => (\n          <li\n            key={card.key}\n            className={`${ cardClassName ? cardClassName : ''} ${styles.card} ${setCardStatus(indexes, index)}`}\n          >\n            { card }\n          </li>\n        ))}\n        </ul>\n      {\n        rightButton ?\n          <span onClick={handleCardTransition}>{rightButton}</span>\n          : <span className={styles.rightButton} onClick={handleCardTransition}>&rsaquo;</span>\n      }\n    </div>\n  );\n}","import React, {StyleSheet, useState} from 'react'\nimport { StackedCarousel } from 'adams-stacked-carousel'\nimport 'adams-stacked-carousel/dist/index.css';\nconst App = () => {\n  const [card, setCard] = useState(null);\n  const onCardChange = (event) => {\n    console.log(\"Card\", event);\n  }\n  \n  return (\n    <div className=\"main\">\n\n      <div>\n        <h3>Carousel with images as children</h3>\n        <StackedCarousel\n          autoRotate={false}\n          onCardChange={onCardChange}>\n          <img key=\"img1\" src=\"https://placeimg.com/640/480/arch\" />\n          <img key=\"img2\" src=\"https://placeimg.com/640/480/tech\" />\n          <img key=\"img3\" src=\"https://placeimg.com/640/480/nature\" />\n          <img key=\"img4\" src=\"https://placeimg.com/640/480/animals\" />\n        </StackedCarousel>\n      </div>\n\n      <div>\n        <h3>Carousel with complex elements as children</h3>\n        <StackedCarousel\n          autoRotate={false}\n          onCardChange={onCardChange}\n          containerClassName={\"container\"}\n          cardClassName=\"card\"\n          leftButton={<span style={{  marginRight: '10px' }}>{\"<\"}</span>}\n          rightButton={<span style={{  marginLeft: '10px' }}>{\">\"}</span>}>\n          <div key={'child1'}>\n            <h2>1 Card</h2>\n          </div>\n          <div key={'child2'}>\n            <h2>2 Card</h2>\n          </div>\n          <div key={'child3'}>\n            <h2>3 Card</h2>\n          </div>\n          <div key={'child4'}>\n            <h2>4 Card</h2>\n          </div>\n          <div key={'child5'}>\n            <h2>5 Card</h2>\n          </div>\n          <div key={'child6'}>\n            <h2>6 Card</h2>\n          </div>\n          <div key={'child7'}>\n            <h2>7 Card</h2>\n          </div>\n        </StackedCarousel>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}